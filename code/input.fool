/*class hero {
    bool iAmAGenius() return true;
    void fuckYeah() print(69);
};

    void m() print(2);
};


let
    int y=2;
    A z =  new A();
in
    z = if (true && false) then {x} else {y};*/

/*class A (int field = 1) {
    void setter(int value) field = value;   // TODO: da permettere!!
};

let
    A a = new A();
in
    a.setter(5);
    print(a.field);*/

/*  NON FUNZIONA
let
    int f(int x, int y) let int z = y-2; in print(x) print(y) print(z) return x*z;
    int h = 2;
in
    h = f(6,-5)
    print(h);*/
/*
let
    int x = 6;
    int y = 2;
in
    print(x, y, x+y, x-y, x*y, x/y);

let
    int z = 5;
    int f() return z+4;
in
    print(f());

let
    int x = -4;
in
    print(x, -x);


let
    bool e1 = true;
    bool e2 = false;
in
    print(e1 && e2);


let
    bool e1 = false;
    bool e2 = false;
in
    print(e1 || e2);
*/
/*
let
    bool e1 = false;
in
    print(not e1);
*/
/*
let
    bool x = true;
    int z = if (x || false) then { x * 3 } else { 4 + x };
in
    print(z);
*/
/*
let
    bool x = not false;
    int z = if (not x || false) then { x * 3 } else { 4 + x };
in
    print(z);
*/
/*
class A {
    void m() print(1);
};

class B extends A {
    void f() m();
};

class C {
    int f() return 1;
};

let
    A a = new B();
in
    //a = new C();
    print(a.f());
*/
/*
let
    int x = 25;
    bool cond = true;
    int y = if (cond) then { x * 2 } else { (x-1)/4 };
    int f(int x) let
        int z = x * 2 + y;  // DA' ERRORE NELLA PRIMA PASSATA (non trova y) E QUINDI NON FUNZIONA (MA IN REALTÃ  FA QUELLO CHE DEVE)
        in
            return z - x;
in
    print(f(8)+y);
*/
/*
let
    int x = 43;
    void f() x = x + 1;
in
    print(x)
    f()
    print(x);
*/
/*
class A (int x = 0, int y = 1) {
    void f() print(x, y);
};
class B extends A (bool b = false) {
    void g() print(b);
};
class C extends B (A a = null, bool cond = true) {
    void f() print(a, cond);
    void ciao() print(2);
};
class D extends A (bool b = true, bool cond = false) {
    void h() print(b, cond);
    void i() print(b);
};
let
    A a = new A();
    B b = new B();
    C c = new C();
    D d = new D();
in
    a.f()
    b.g()
    c.f()
    d.i();
*/
/*
class A {
    void f() print(2);
};
class B extends A {
    void g() print(3);
    void f() print(4);
};
let
    B b = new B();
in
    b.f();
*/

class A (int x = 20, bool cond = true, int y = 50) {
    void f(int x, int y, bool ciao) print(x,y, ciao);
};
let
    A a = new A();
    A b = new A();
   // int c = 34;
   // int d = 54;
in
    a.f(123,321, false)
    b.f(1, 2, true);
   /*// print(a.x, a.cond, a.y)
    //a.y = 1234
    //print(a.x, a.cond, a.y)
    //print(a.x, a.cond, a.y, b.x, b.cond, b.y)
    print(c)
    print(d);*/
/*
let
    int x = 10;
    int f(int y, bool cond) let int z = y+x in return z*2;
    int y = 20;
in
    print(f(y, true));*/